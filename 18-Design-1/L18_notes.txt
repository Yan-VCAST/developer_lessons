#1 -- 软件设计的意义，即架构的意义
		1.扩展性、维护性、复用性
		2.部署
		3.交互
	
	  软件设计的特点：
		1.塑造模型概念的过程
		2.取舍的过程
		3.分而治之的过程
		4.在理性范围内追求完美的过程
	
	  软件质量
		用户角度：defect和bug的数量越少，意味着质量越好
		开发角度：1)整体架构设计易于扩展; 2)模块之间耦合性低、易于复用; 3)代码简洁易懂、易于维护
		
	  如何提高软件质量？
		1.编码前，架构设计质量必须得到保证
		2.编码时，代码质量必须得到保证
		3.编码后，测试质量必须得到保证
	
	  测试：
		1.根据需求分析进行“功能”测试用例的设计
		2.根据架构设计进行“模块”测试用例的设计
		3.根据产品标准进行“压力”测试用例的设计
	
	  开发中的常见问题
		1.测试是替罪羊（测试只能证明到目前为止没有错误，不能证明被测软件就是对的）
		2.资源永远不足，没有时间和精力去重构（发现架构问题时，小步重构）
		3.不改变就可以规避风险（虽然有缺陷，但功能不受影响，就不做改变）

======================

#2 -- 设计思想，包含设计原则；设计原则，包含设计模式

	  测试质量和代码质量，直接决定最终产品的质量
	  正规开发流程中，测试人员先于编码人员介入项目
	  软件架构设计能力需要通过实践提高，需要总结和体会

======================
