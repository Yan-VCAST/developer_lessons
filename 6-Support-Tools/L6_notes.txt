#1 -- 开发环境包括：构建环境 + 调试环境 + 测试环境
	  嵌入式开发的时间分配：代码编写及目标构建（20%） + 测试/调试/debug（80%）
	  
======================

#2 -- GNU为GCC编译器提供了配套的辅助工具集 -- Binutils
		1. addr2line - 将代码地址转换为对应的程序行号
			1)开启core dump选项： ulimit -c unlimited
			2)运行程序，并生成崩溃时的core文件
			3)读取core文件，获取IP寄存器的值:  dmesg core
			4)使用addr2line定位代码行:  addr2line 0x08048000 -f -e test.out
		2. strip - 剔除可执行程序中的调试信息
			用法： strip <可执行文件>
		3. ar - 将目标文件打包成静态库
			1) 打包目标文件x.o和y.o到libname.a中：  ar crs libname.a x.o y.o
			2) 解压目标文件：   ar x libname.a
		4. nm - 列出目标文件中的符号及对应地址
		5. objdump - 查看程序段信息及反汇编
			1) objdump -d func.o   ==>打印出目标文件func.o所对应的汇编代码
			2) objdump -S func.o   ==>打印源码相关的汇编代码（选项是大写的S）
			3) objdump -h test.out   ==>查看目标文件中的详细段信息
		6. size - 查看目标文件中的段大小
		7. strings - 查看目标文件中的字符串

======================

#3 -- Tips
		1. 添加调试信息，在编译命令中添加 “-g” 选项
		2. 查看某个文件的具体信息，如文件大小： ls -l <目标文件>
		3. 在桌面环境中运行执行文件，系统会将目标文件先放入虚拟内存，产生
			虚存地址VMA，加载地址LMA，往往VMA=LMA；而 运行地址 则指实际内存运行文件的地址

======================

